# Tox (https://tox.wiki/) is a tool for running tests in multiple
# virtualenvs. This configuration file will run the test suite on all
# supported python versions. To use it, run "tox" from this directory.
#
# For a specific environment, run:
#     "tox -e <env>" (i.e.: "tox -e py313" or "tox -e lint")
#
# This tox configuration will skip any Python interpreters that can't be found.
# To manage multiple Python interpreters for covering all versions, you can use
# pyenv: https://github.com/pyenv/pyenv


[tox]
envlist =
    validate
    lint
    type
    py39
    py310
    py311
    py312
    py313
    pypy3
skip_missing_interpreters = true


[testenv]
description = run tests
platform = linux|darwin|.*bsd.*
dependency_groups =
    test
commands =
    pytest {posargs:.}


[testenv:validate]
description = validate project configuration
platform = .*
dependency_groups =
    validate
commands =
    validate-pyproject pyproject.toml


[testenv:lint]
description = run linters
platform = .*
dependency_groups =
    lint
skip_install = true
commands =
    # crazy workaround so black doesn't print red messages to console on success
    {envpython} -c "import subprocess as s; import sys; "\
    "r = s.run(['black', '.'], capture_output=True, text=True, encoding='utf-8'); "\
    "sys.stdout.write(r.stderr) if not r.returncode else sys.stderr.write(r.stderr)"
    isort .
    autoflake --exclude={env:VIRTUAL_ENV},{work_dir} .
    flake8 --max-line-length=88 --extend-exclude={env:VIRTUAL_ENV} .


[testenv:type]
description = run type checks
platform = linux|darwin|.*bsd.*
dependency_groups =
    type
skip_install = true
commands =
    mypy --install-types --non-interactive {posargs:.}
